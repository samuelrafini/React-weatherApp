{"version":3,"sources":["api/keys/keys.js","api/api.js","components/Title.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["openWeathermapAPI_KEY","getBackgroundImage","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","city","api_call","data","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","results","Math","floor","random","length","urls","regular","stop","this","_x","apply","arguments","Title","props","react_default","createElement","className","style","background","backgroundURL","backgroundSize","backgroundColor","Form","onSubmit","getWeather","type","name","placeholder","Weather","entries","map","_ref2","slicedToArray","key","value","country","charAt","toUpperCase","slice","App","state","undefined","temperature","humidity","description","error","e","preventDefault","target","t0","_this","t1","main","temp","t2","t3","sys","t4","t5","weather","t6","t7","t8","setState","call","t9","console","log","objectSpread","components_Title","components_Form","components_Weather","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.354f73ab.chunk.js","sourcesContent":["\nexport const openWeathermapAPI_KEY = '744113a768ea2cf75f54a4ffbe673b84'\nexport const unsplashAPI_KEY = '12ea255311a07a21aae4ece78443ce0c1541754d33f0c597e67996cb42eda0ec'","import { unsplashAPI_KEY } from './keys/keys'\n   \n   export const getBackgroundImage = async (city) => {\n    const api_call = await fetch(`https://api.unsplash.com/search/photos/?query=${city}&client_id=${unsplashAPI_KEY}`)\n    const data = await api_call.json();\n    return data.results[Math.floor(Math.random() * data.results.length)].urls.regular\n}\n\n","import React from 'react';\n\nconst Title = (props) => (\n    <div className='title' style={{\n        background: `url(${props.backgroundURL}) no-repeat center center fixed`,\n        backgroundSize: 'cover',\n        backgroundColor: '#4A4D56'\n    }}>\n        <h1 className='title-header'>Weather App</h1>\n    </div>\n)\n\nexport default Title;\n\n","import React from 'react';\n\nconst Form = props => (\n    <div>\n        <form className='form' onSubmit={props.getWeather}>\n            <input\n                className='form-input'\n                type='text'\n                name='city'\n                placeholder='City...'\n            />\n\n            <input\n                className='form-input'\n                type='text'\n                name='country'\n                placeholder='Country...'\n            />\n            <button className='form-button'>Get Weather</button>\n        </form>\n    </div>\n)\nexport default Form","import React from 'react';\n\nconst Weather = props => {\n  \n    return (\n        <div className='weather'>\n            {Object.entries(props).map(([key, value]) => {\n                if (key === 'city' && value) {\n                    return <p key={key} className='weather-data'>Location: {value}, {props.country}</p>\n                }else if (key === 'country' || key === 'backgroundURL'){\n                    return undefined\n                }\n                if (value){\n                    return <p key={key} className='weather-data'>{key.charAt(0).toUpperCase() + key.slice(1)}: {value} </p>\n                }\n            })}\n        </div>\n    )\n}\nexport default Weather\n","import React from 'react';\nimport { getBackgroundImage } from './api/api'\nimport { openWeathermapAPI_KEY } from './api/keys/keys'\n\n//Components\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\nclass App extends React.Component {\n\n    state = {\n        city: undefined,\n        country: undefined,\n        temperature: undefined,\n        humidity: undefined,\n        description: undefined,\n        backgroundURL: undefined,\n        error: undefined\n    }\n    getWeather = async (e) => {\n\n        e.preventDefault();\n        const city = e.target.city.value\n        const country = e.target.country.value\n\n\n        try {\n            const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${openWeathermapAPI_KEY}&units=metric`)\n            const data = await api_call.json();\n\n            this.setState({\n                temperature: data.main.temp,\n                city: data.name,\n                country: data.sys.country,\n                humidity: data.main.humidity,\n                description: data.weather[0].description,\n                backgroundURL: await getBackgroundImage(city),\n                error: undefined\n            })\n\n        } catch (error) {\n            console.log(error)\n            this.setState({\n                ...this.state,\n                error: 'Please enter a valid value for city and country'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <Title backgroundURL={this.state.backgroundURL} />\n                <div className='weather-container'>\n                    <Form getWeather={this.getWeather} />\n                    <Weather {...this.state} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\nimport App from './App';\n\n\n\n\n \nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}